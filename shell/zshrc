export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"

plugins+=(zsh-nvm)
plugins+=(yarn-completion)
source $ZSH/oh-my-zsh.sh

source $HOME/.shell/.aliases
source $HOME/.shell/.funcs
source $HOME/.shell/.env

# Add Git completion
autoload -Uz compinit && compinit

setopt autocd

# Set vim to default editor
export EDITOR='vim'

if typeset -f nvm > /dev/null; then
  # Automatically switch node versions when a directory has a `.nvmrc` file
  autoload -U add-zsh-hook
  # Zsh hook function
  load-nvmrc() {
  local node_version="$(nvm version)" # Current node version
  local nvmrc_path="$(nvm_find_nvmrc)" # Path to the .nvmrc file

    # Check if there exists a .nvmrc file
    if [ -n "$nvmrc_path" ]; then
      local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    # Check if the node version in .nvmrc is installed on the computer
    if [ "$nvmrc_node_version" = "N/A" ]; then
      # Install the node version in .nvmrc on the computer and switch to that node version
      nvm install
      # Check if the current node version matches the version in .nvmrc
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      # Switch node versions
      nvm use
    fi
    # If there isn't an .nvmrc make sure to set the current node version to the default node version
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
    fi
  }
# Add the above function when the present working directory (pwd) changes
add-zsh-hook chpwd load-nvmrc
load-nvmrc
fi

# Use Spaceship prompt
autoload -U promptinit; promptinit
prompt spaceship

setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell
